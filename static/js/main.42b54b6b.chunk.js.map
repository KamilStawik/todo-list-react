{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","onChange","target","autoFocus","required","placeholder","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraContent","Header","Container","props","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42b54b6b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                className=\"form__input\"\r\n                autoFocus\r\n                required\r\n                placeholder=\"Co jest do zrobienia?\" />\r\n            <button className=\"form__button\">Dodaj zadanie!</button>\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"taskList\">\r\n        {tasks.map(task => (\r\n            <li key={task.id} className={`taskList__listItem${task.done && hideDone ? \" taskList__listItem--hiden\" : \"\"}`}>\r\n                <button onClick={() => toggleTaskDone(task.id)} className=\"taskList__button\">{task.done ? \"âœ“\" : \"\"}</button>\r\n                <span className={`taskList__taskContent${task.done ? \" taskList__taskContent--done\" : \"\"}`}>{task.content}</span>\r\n                <button onClick={() => removeTask(task.id)} className=\"taskList__button taskList__button--removeButton\">ðŸ—‘</button>\r\n            </li>\r\n        ))}\r\n    </ul >\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    } else\r\n        return (\r\n            <div className=\"buttons__buttonsContainer\">\r\n                <button onClick={toggleHideDone} className=\"buttons\">\r\n                    {hideDone === false ? \"Ukryj ukoÅ„czone\" : \"PokaÅ¼ ukoÅ„czone\"}\r\n                </button>\r\n                <button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </button>\r\n            </div >\r\n        )\r\n};\r\n\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraContent }) => (\r\n    <section className=\"section\">\r\n        <div>\r\n            <header className=\"section__header\">\r\n                <h2 className=\"section__titleText\">{title}</h2>\r\n                {extraContent}\r\n            </header>\r\n        </div>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\"\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <h1 className=\"header\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\"; \r\n\r\nconst Container = (props) => (\r\n    <main className=\"container\">\r\n        {props.children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\"\nimport Container from \"./Container\";\n\nfunction App() {\n    const [hideDone, setHideDone] = useState(false);\n    const [tasks, setTasks] = useState([\n    ]);\n\n    const toggleHideDone = () => {\n        setHideDone(hideDone => !hideDone);\n    };\n\n    const removeTask = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(tasks => tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, done: !task.done };\n            } else {\n                return task;\n            }\n        }));\n    };\n\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task, done: true\n        })));\n    };\n\n    const addNewTask = (content) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content,\n                done: false,\n                id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n            }\n        ]);\n    };\n\n    return (\n\n        <Container>\n            <Header title=\"Lista zadaÅ„\" />\n\n            <Section\n                title=\"Dodaj nowe zadanie\"\n                body={<Form addNewTask={addNewTask} />}\n            />\n\n            <Section\n                title=\"Lista zadaÅ„\"\n                body={<Tasks\n                    tasks={tasks}\n                    hideDone={hideDone}\n                    removeTask={removeTask}\n                    toggleTaskDone={toggleTaskDone}\n                />}\n\n                extraContent={<Buttons\n                    tasks={tasks}\n                    hideDone={hideDone}\n                    toggleHideDone={toggleHideDone}\n                    setAllDone={setAllDone}\n                />}\n            />\n        </Container>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}