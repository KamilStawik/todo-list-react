{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","newTaskContentTrimed","trim","onSubmit","event","preventDefault","value","onChange","target","autoFocus","required","placeholder","StyledTasks","ul","ListItem","li","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","StyledButtons","div","Buttons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","Header","header","HeaderText","h2","Section","title","body","extraContent","StyledHeader","h1","Wrapper","main","Container","children","App","setHideDone","tasksArray","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAaC,IAAOC,KAAV,oQAaVC,EAAQF,IAAOG,MAAV,2GAOLC,EAASJ,IAAOK,OAAV,mgB,OCUJC,EA7BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACZ,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAuBF,EAAeG,OAY5C,OACI,eAACb,EAAD,CAAYc,SAXK,SAACC,GAClBA,EAAMC,iBACuB,KAAzBJ,IAIJJ,EAAWI,GACXD,EAAkB,MAIlB,UACI,cAACR,EAAD,CACIc,MAAOP,EACPQ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAkBQ,EAAOF,QACnDG,WAAS,EACTC,UAAQ,EACRC,YAAY,0BAEhB,cAACjB,EAAD,iCCzBCkB,EAActB,IAAOuB,GAAV,2IAOXC,EAAWxB,IAAOyB,GAAV,+KAOf,qBAAGC,QAAuBC,YAAJ,2DAKfC,EAAU5B,IAAO6B,KAAV,+GAKd,qBAAGC,MAAmBH,YAAJ,2EAKXvB,EAASJ,IAAOK,OAAV,iRAWb,qBAAG0B,YAA+BJ,YAAJ,uKAQ9B,qBAAGK,QAAuBL,YAAJ,mKC9BbM,EAlBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,eAAhC,OACV,cAACf,EAAD,UACKY,EAAMI,KAAI,SAAAC,GAAI,OACX,eAACf,EAAD,CAAwBE,OAAQa,EAAKT,MAAQK,EAA7C,UACI,cAAC,EAAD,CAAQK,QAAS,kBAAMH,EAAeE,EAAKE,KAAKV,YAAU,EAA1D,SACKQ,EAAKT,KAAO,SAAM,KAEvB,cAACF,EAAD,CAASE,KAAMS,EAAKT,MAAQK,EAA5B,SACKI,EAAKG,UAEV,cAAC,EAAD,CAAQF,QAAS,kBAAMJ,EAAWG,EAAKE,KAAKT,QAAM,EAAlD,4BAPWO,EAAKE,UCHnBE,EAAgB3C,IAAO4C,IAAV,iKASbxC,EAASJ,IAAOK,OAAV,0XCaJwC,EAtBC,SAAC,GAAqD,IAAnDX,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,SAAUW,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WAChD,OAAqB,IAAjBb,EAAMc,OACC,KAGH,eAACL,EAAD,WACI,cAAC,EAAD,CACIH,QAASM,EADb,UAGkB,IAAbX,EAAqB,uBAAoB,8BAG9C,cAAC,EAAD,CACIK,QAASO,EACTE,SAAUf,EAAMgB,OAAM,qBAAGpB,QAF7B,uCCZHqB,EAAgBnD,IAAOoD,QAAV,yNAWbC,EAASrD,IAAOsD,OAAV,2QAYNC,EAAavD,IAAOwD,GAAV,+FCXRC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,aAAhB,OACZ,eAACT,EAAD,WACI,8BACI,eAAC,EAAD,WACI,cAACI,EAAD,UAAaG,IACZE,OAGRD,MCRIE,EAAe7D,IAAO8D,GAAV,uECQVT,EARA,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAH,OACX,iCACI,cAACG,EAAD,UACKH,OCHAK,EAAU/D,IAAOgE,KAAV,8FCMLC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,cAACH,EAAD,UACKG,KCmFMC,MA/Ef,WACI,MAAgC3D,oBAAS,GAAzC,mBAAO2B,EAAP,KAAiBiC,EAAjB,KACMC,EAAaC,aAAaC,QAAQ,cAExC,EAA0B/D,mBACtB6D,EACMG,KAAKC,MAAMJ,GACX,IAHV,mBAAOnC,EAAP,KAAcwC,EAAd,KA6CA,OAvCAC,qBAAU,WACNL,aAAaM,QAAQ,aAAcJ,KAAKK,UAAU3C,MACnD,CAACA,IAuCA,eAAC,EAAD,WACI,cAAC,EAAD,CAAQwB,MAAM,qBAEd,cAAC,EAAD,CACIA,MAAM,qBACNC,KAAM,cAAC,EAAD,CAAMpD,WAlBL,SAACmC,GAChBgC,GAAS,SAAAxC,GAAK,4BACPA,GADO,CAEV,CACIQ,UACAZ,MAAM,EACNW,GAAqB,IAAjBP,EAAMc,OAAe,EAAId,EAAMA,EAAMc,OAAS,GAAGP,GAAK,aAe9D,cAAC,EAAD,CACIiB,MAAM,mBACNC,KAAM,cAAC,EAAD,CACFzB,MAAOA,EACPC,SAAUA,EACVC,WA9CG,SAACK,GAChBiC,GAAS,SAAAxC,GAAK,OAAIA,EAAM4C,QAAO,SAAAvC,GAAI,OAAIA,EAAKE,KAAOA,SA8CvCJ,eA3CO,SAACI,GACpBiC,GAAS,SAAAxC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GACxB,OAAIA,EAAKE,KAAOA,EACL,2BAAKF,GAAZ,IAAkBT,MAAOS,EAAKT,OAEvBS,WAyCPqB,aAAc,cAAC,EAAD,CACV1B,MAAOA,EACPC,SAAUA,EACVW,eAzDO,WACnBsB,GAAY,SAAAjC,GAAQ,OAAKA,MAyDbY,WAxCG,WACf2B,GAAS,SAAAxC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,kCACzBA,GADyB,IACnBT,MAAM,mBC9BZiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.532571f5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    background-color: hsl(0, 0%, 100%);\r\n    margin-top: 2px;\r\n    margin-bottom: 10px;\r\n    padding: 20px 10px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media (max-width: 767px) {\r\n            flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    max-width: 100%;\r\n    padding: 8px;\r\n    margin: 10px;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    padding: 10px 20px;\r\n    background-color: hsl(180, 100%, 25%);\r\n    color: hsl(0, 0%, 100%);\r\n    margin: 10px;\r\n    cursor: pointer;\r\n    justify-self: flex-end;\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 35%);\r\n        transform: scale(1.1);\r\n    }\r\n    \r\n    &:active {\r\n        background-color: hsl(180, 100%, 45%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    @media(max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const newTaskContentTrimed = newTaskContent.trim();\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (newTaskContentTrimed === \"\") {\r\n            return\r\n        };\r\n\r\n        addNewTask(newTaskContentTrimed);\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                autoFocus\r\n                required\r\n                placeholder=\"Co jest do zrobienia?\"\r\n            />\r\n            <Button>Dodaj zadanie!</Button>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledTasks = styled.ul`\r\n    background-color: hsl(0, 0%, 100%);\r\n    list-style: none;\r\n    padding: 20px 10px;\r\n    margin-top: 2px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    border-bottom: hsl(0, 0%, 93%) solid 1px;\r\n    margin-top: 15px;\r\n    padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    word-break: break-word;\r\n    padding: 0px 10px;\r\n    flex-grow: 1;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: hsl(120, 100%, 25%);\r\n    color: rgb(255, 255, 255);\r\n    font-weight: bold;\r\n    flex-shrink: 0;\r\n    transition: 0.5s;\r\n    cursor: pointer;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: hsl(120, 100%, 25%);\r\n\r\n        &:hover {\r\n            background-color: hsl(120, 100%, 30%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: hsl(0, 100%, 50%);\r\n\r\n        &:hover {\r\n            background-color: hsl(0, 100%, 60%);\r\n        }\r\n    `} \r\n`;","import { StyledTasks, ListItem, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <StyledTasks>\r\n        {tasks.map(task => (\r\n            <ListItem key={task.id} hidden={task.done && hideDone}>\r\n                <Button onClick={() => toggleTaskDone(task.id)} toggleDone>\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done && hideDone}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button onClick={() => removeTask(task.id)} remove>\r\n                    ðŸ—‘\r\n                </Button>\r\n            </ListItem>\r\n        ))}\r\n    </StyledTasks>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const StyledButtons = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 767px) {\r\n            flex-direction: column;\r\n        }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background-color: hsl(0, 0%, 100%);\r\n    color: hsl(180, 100%, 25%);\r\n    margin: 10px 20px 10px 0px;\r\n    transition: 0.5s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: hsl(180, 100%, 35%);\r\n    }\r\n    &:active {\r\n        color: hsl(180, 100%, 45%);\r\n    }\r\n    &:disabled {\r\n        color: hsl(0, 0%, 80%);\r\n    }\r\n`;","import { StyledButtons, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    } else\r\n        return (\r\n            <StyledButtons>\r\n                <Button\r\n                    onClick={toggleHideDone}\r\n                >\r\n                    {hideDone === false ? \"Ukryj ukoÅ„czone\" : \"PokaÅ¼ ukoÅ„czone\"}\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n            </StyledButtons >\r\n        )\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: hsl(0, 0%, 100%);\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 767px) {\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    padding-left: 20px;\r\n    border-bottom: 2px solid hsl(0, 0%, 93%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width: 767px) {\r\n            flex-wrap: wrap;\r\n            justify-content: center;\r\n    }\r\n`;\r\n\r\nexport const HeaderText = styled.h2`\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n    }\r\n`;","import { Header, HeaderText, StyledSection } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraContent }) => (\r\n    <StyledSection>\r\n        <div>\r\n            <Header>\r\n                <HeaderText>{title}</HeaderText>\r\n                {extraContent}\r\n            </Header>\r\n        </div>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    padding: 10px;\r\n    font-weight: 900;\r\n`;","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <StyledHeader>\r\n            {title}\r\n        </StyledHeader>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n    max-width: 800px;\r\n    margin: 10px auto;\r\n    padding: 8px;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import React, { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\"\nimport Container from \"./Container\";\n\nfunction App() {\n    const [hideDone, setHideDone] = useState(false);\n    const tasksArray = localStorage.getItem(\"tasksArray\");\n\n    const [tasks, setTasks] = useState(\n        tasksArray\n            ? JSON.parse(tasksArray)\n            : []\n    );\n\n    useEffect(() => {\n        localStorage.setItem(\"tasksArray\", JSON.stringify(tasks));\n    }, [tasks]);\n\n    const toggleHideDone = () => {\n        setHideDone(hideDone => !hideDone);\n    };\n\n    const removeTask = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(tasks => tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, done: !task.done };\n            } else {\n                return task;\n            }\n        }));\n    };\n\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task, done: true\n        })));\n    };\n\n    const addNewTask = (content) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content,\n                done: false,\n                id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n            }\n        ]);\n    };\n\n    return (\n\n        <Container>\n            <Header title=\"Lista zadaÅ„\" />\n\n            <Section\n                title=\"Dodaj nowe zadanie\"\n                body={<Form addNewTask={addNewTask} />}\n            />\n\n            <Section\n                title=\"Lista zadaÅ„\"\n                body={<Tasks\n                    tasks={tasks}\n                    hideDone={hideDone}\n                    removeTask={removeTask}\n                    toggleTaskDone={toggleTaskDone}\n                />}\n\n                extraContent={<Buttons\n                    tasks={tasks}\n                    hideDone={hideDone}\n                    toggleHideDone={toggleHideDone}\n                    setAllDone={setAllDone}\n                />}\n            />\n        </Container>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}